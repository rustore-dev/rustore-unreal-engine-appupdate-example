<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">

  <prebuildCopies>
    <copyDir src="$S(PluginDir)/Private/Java" dst="$S(BuildDir)/src/com/Plugins/RuStoreCore" />
  </prebuildCopies>

  <resourceCopies>
    <copyDir src="$S(PluginDir)/ThirdParty/Android/libs" dst="$S(BuildDir)/libs" />
  </resourceCopies>
  
  <gradleProperties>
    <insert>
      android.useAndroidX=true
      android.enableJetifier=true
    </insert>
  </gradleProperties>
  
  <buildscriptGradleAdditions>
    <insert>
      dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
      }
    </insert>
  </buildscriptGradleAdditions>

  <buildGradleAdditions>
    <insert>
      ext {
        core_type = ''
      
        android {
          buildTypes {
            all {
              minifyEnabled false
            }
          }
        }
      }
        
      repositories {
        google()
        mavenCentral()
        maven {
          url 'https://artifactory-external.vkpartner.ru/artifactory/maven'
        }
        maven {
          url uri("src/main/libs")
        }
      }
        
      if (project.hasProperty('rustore_sdk_type')) {
        core_type = rustore_sdk_type
      }
      
      dependencies {
        // RuStore Core
        //implementation("ru.rustore.sdk:core:1.0.0$core_type")
        implementation fileTree(include: ["RuStoreUnityCore${core_type}.aar"], dir: 'src/main/libs')
        
        implementation("androidx.annotation:annotation:1.0.0")
        implementation("androidx.lifecycle:lifecycle-runtime:2.4.1")
        implementation("com.google.android.material:material:1.6.0")
        implementation("androidx.appcompat:appcompat:1.5.0")
      }
      
      android {
        compileOptions {
          sourceCompatibility JavaVersion.VERSION_1_8
          targetCompatibility JavaVersion.VERSION_1_8
        }
        
        packagingOptions {
          exclude 'META-INF/core_release.kotlin_module'
        }
      }
    </insert>
  </buildGradleAdditions>

  <baseBuildGradleAdditions>
    <insert>
      allprojects {
        def mappings = [
          'android.support.annotation': 'androidx.annotation',
          'android.arch.lifecycle': 'androidx.lifecycle',
          'android.support.v4.app.NotificationCompat': 'androidx.core.app.NotificationCompat',
          'android.support.v4.app.ActivityCompat': 'androidx.core.app.ActivityCompat',
          'android.support.v4.content.ContextCompat': 'androidx.core.content.ContextCompat',
          'android.support.v4.app.NotificationManagerCompat': 'androidx.core.app.NotificationManagerCompat',
          'android.support.v4.content.FileProvider': 'androidx.core.content.FileProvider',
          'android.support.v13.app.FragmentCompat': 'androidx.legacy.app.FragmentCompat',
          'android.arch.lifecycle.Lifecycle': 'androidx.lifecycle.Lifecycle',
          'android.arch.lifecycle.LifecycleObserver': 'androidx.lifecycle.LifecycleObserver',
          'android.arch.lifecycle.OnLifecycleEvent': 'androidx.lifecycle.OnLifecycleEvent',
          'android.arch.lifecycle.ProcessLifecycleOwner': 'androidx.lifecycle.ProcessLifecycleOwner',
        ]

      beforeEvaluate { project ->
        project.rootProject.projectDir.traverse(type: groovy.io.FileType.FILES, nameFilter: ~/.*\.java$/) { f ->
            mappings.each { entry ->
              if (f.getText('UTF-8').contains(entry.key)) {
                println "Updating ${entry.key} to ${entry.value} in file ${f}"
                ant.replace(file: f, token: entry.key, value: entry.value)
              }
            }
          }
        }
      }
    </insert>
  </baseBuildGradleAdditions>

</root>
